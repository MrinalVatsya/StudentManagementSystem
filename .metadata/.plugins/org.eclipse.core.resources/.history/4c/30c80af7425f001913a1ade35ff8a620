/**
 * 
 */
package com.mind.poc;

import java.util.Arrays;

/**
 * @author mrinalvatsya
 *
 */
public class SubsetSumDP {

	private static int dp[][];
	static int isSubsetSum(int set[], 
			int n, int sum) 
	{ 
		// Base Cases 
		if (sum == 0) 
			return 1; 
		if (n == 0 && sum != 0) 
			return 0; 
		
		if(dp[n][sum]!=-1)
		{
			return dp[n][sum];
		}
		
		int ans = 0;
 
		if (set[n-1] > sum) 
			{
			ans = isSubsetSum(set, n-1, sum); 
			}
		
		ans = isSubsetSum(set, n-1, sum) ||  isSubsetSum(set, n-1, sum-set[n-1])

		if(isSubsetSum(set, n-1, sum) ||  isSubsetSum(set, n-1, sum-set[n-1]))
		{
			
		}
	} 

	/* Driver program to test above function */
	public static void main (String args[]) 
	{ 
		int set[] = {3, 34, 4, 12, 5, 2}; 
		int sum = 9; 
		int n = set.length; 
		dp = new int[n][sum];
		Arrays.fill(dp, -1);
		if (isSubsetSum(set, n, sum) == true) 
			System.out.println("Found a subset"
					+ " with given sum"); 
		else
			System.out.println("No subset with"
					+ " given sum"); 
	} 
 

}
