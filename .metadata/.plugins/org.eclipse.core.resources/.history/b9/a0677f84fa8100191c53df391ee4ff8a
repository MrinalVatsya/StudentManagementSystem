/**
 * 
 */
package com.mind.poc;

import java.util.ArrayList;

/**
 * @author mrinalvatsya
 *
 */
public class RecoverBinaryTree {
	
	public ArrayList<Integer> recoverTree(TreeNode a) {
		
		 ArrayList<Integer> ans = new ArrayList<>();
		TreeNode prev = null, curr = null , last = null, first = null, middle = null;
		if(a!= null)
		{
			recoverTree(a.left);
			if(last==null)//when swapped nodes are adjacent..
			{
				ans.add(last.val);
			}
			if(prev.val > a.val && first == null)//first violation..
			{
				first = a;
			}
			recoverTree(a.right);
		}
		
    }

}
