/**
 * 
 */
package com.mind.poc;

/**
 * @author mrinalvatsya
 *
 */
import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class GameDP {
	
	private static boolean dp[][]= new int[1002][1002];
	
    static int arraySplitting(int[] arr) {
       
    	int i = 0, sum = 0;
    	int n = arr.length;
    	for(i = 0; i < n; i++)
    	{
    		sum += arr[i];
    	}
    	
    	if(sum%2!=0)
    	{
    		return 0;
    	}
    	else
    	{
    		if(isPossible(arr,sum/2,n))
    		{
    			return 1;
    		}
    		else
    		{
    			return 0;
    		}
    	}
    		
    }

    private static boolean isPossible(int[] arr, int sum, int n) {
		
    	if(sum == 0)
    		return true;
    	
    	if(n==0)
    		return false;
    	
    	if(arr[n-1] > sum)
    		return isPossible(arr, sum, n-1);
    	
    	return (isPossible(arr, sum-arr[n-1], n-1)|| isPossible(arr, sum, n-1));
	}

	private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("D://Solution.txt"));

        int t = Integer.parseInt(scanner.nextLine().trim());

        for (int tItr = 0; tItr < t; tItr++) {
            int arrCount = Integer.parseInt(scanner.nextLine().trim());

            int[] arr = new int[arrCount];

            String[] arrItems = scanner.nextLine().split(" ");

            for (int arrItr = 0; arrItr < arrCount; arrItr++) {
                int arrItem = Integer.parseInt(arrItems[arrItr].trim());
                arr[arrItr] = arrItem;
            }

            int result = arraySplitting(arr);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();
    }
}
