/**
 * 
 */
package com.mind.poc;

import java.util.ArrayList;
import java.util.Arrays;

/**
 * @author mrinalvatsya
 *
 */
public class MinimumPathSum {
	
	private static int dp[][] ;
	    public int minPathSum(ArrayList<ArrayList<Integer>> a) {
	    	
	    	int m = a.size();
	    	int n = a.get(0).size();
	    	
	    	dp = new int[m][n];
	    	return minPathSumUtil(m-1, n-1, a);
	    }

		private int minPathSumUtil(int m, int n, ArrayList<ArrayList<Integer>> a) {
			
			if(m==0&&n==0)
			{
				return dp[0][0] = a.get(0).get(0);
			}
			
			if(m < 0 || n < 0)
			{
				return Integer.MAX_VALUE;
			}
			
			return Math.min(minPathSumUtil(m-1, n, a), minPathSumUtil(m, n-1, a)) + a.get(m).get(n); 
		}
		
		public static void main(String[] args) {
			MinimumPathSum mp = new MinimumPathSum();
			ArrayList<ArrayList<Integer>> a = new ArrayList<ArrayList<Integer>>();
			ArrayList<Integer> row = new ArrayList<>();
			row.add(1);
			row.add(3);
			row.add(2);
			a.add(row);
			 row = new ArrayList<>();
			 row.add(4);
				row.add(3);
				row.add(1);
				a.add(row);
				
				 row = new ArrayList<>();
				row.add(5);
				row.add(6);
				row.add(1);
				a.add(row);
//			a.add((ArrayList<Integer>) Arrays.asList(4,3,1));
//			a.add((ArrayList<Integer>) Arrays.asList(5,6,1));
			
			for(int i =  0; i < a.size(); i++)
			{
				for(int j = 0; j < a.get(i).size(); j++)
				{
					System.out.print(a.get(i).get(j) + " ");
				}
				System.out.println();
			}
			
			System.out.println(mp.minPathSum(a));
		}
}
