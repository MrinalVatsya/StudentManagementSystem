package com.mind.poc;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class CountArray {

	static long countArray(int n, int k, int x) {
		// Return the number of ways to fill in the array
		long dp[][] = new long[(int)n + 1][(int)2];
		dp[(int)0][(int)0] = 0;
		dp[(int)0][(int)1] = 1;

		dp[(int)1][(int)0] = k-1;
		dp[(int)1][(int)1] = 0;

		for(long i = 2 ; i < n; i++)
		{
			dp[(int)i][(int)0] = dp[(int)i-1][(int)0]*(k-2) + dp[(int)i-1][(int) 1]*(k-1);
			dp[(int) i][(int)1] = dp[(int)i-1][(int)0];
		}
		
//		if(x==1)
//		{
//			dp[n-1][1] = dp[n-2][0];
//			return dp[n-1][1];
//		}
//		else
//		{
//			dp[(int)n-1][(int)0] = dp[(int)n-2][(int)0] + dp[(int)n-2][(int)1] - 1;
//			return dp[n-1][0];
//		}
		return dp[n-1][0];
	}
	private static final Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) {

		String[] nkx = scanner.nextLine().split(" ");

		int n = Integer.parseInt(nkx[0]);

		int k = Integer.parseInt(nkx[1]);

		int x = Integer.parseInt(nkx[2]);

		long answer = countArray(n, k, x);

		System.out.println(answer);
	}

}