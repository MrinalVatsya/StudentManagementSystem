/**
 * 
 */
package com.mind.poc;

import java.util.ArrayList;
import java.util.Queue;

/**
 * @author mrinalvatsya
 *
 */
public class DiameterNArrayTree {
	
	 public int solve(ArrayList<Integer> a) {
		 
		 int i = 0;
		 
		 int n = a.size();
		 ArrayList<ArrayList<Integer>> g = new ArrayList<>(n);
		 
		 for(i = 0; i < n; i++)
		 {
			 g.add(new ArrayList<>());
		 }
		 
		 for(i = 0; i < a.size(); i++)
		 {
			 int x = a.get(i);
			 if(x!=-1)
			 {
				 g.get(i).add(x);
				 g.get(x).add(i);
			 }
		 }
		 
		 int x = bfs(0,g,n);
	    }

	private int bfs(int src, ArrayList<ArrayList<Integer>> g2, int n) {
		
		int i;
		for(i = 0; i < n; i++)
		{
			
		}
		return 0;
	}

}
