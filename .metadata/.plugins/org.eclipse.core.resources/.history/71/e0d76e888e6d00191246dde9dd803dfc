/**
 * 
 */
package com.mind.poc;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

/**
 * 
 */
/**
 * 
 */

import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

import org.apache.commons.codec.binary.Base64;

import sun.misc.IOUtils;

public class TestClass {
	
	private static final String mySecretkey = "aesEncryptionKey";
	private static final String initVector = "encryptionIntVec";

	public static String decrypt(final String encrypted) throws Exception {

		 try {
			 
			 
		 SecretKey key = new SecretKeySpec(mySecretkey.getBytes("UTF-8"), "AES");
		 IvParameterSpec iv = new IvParameterSpec(initVector.getBytes("UTF-8"));
		 byte[] decodeBase64 = Base64.decodeBase64(encrypted);
		 Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
		 cipher.init(Cipher.DECRYPT_MODE, key, iv);
		 return new String(cipher.doFinal(decodeBase64), "UTF-8");
		 } catch (Exception e) {
		 e.printStackTrace();
		 throw new RuntimeException("This should not happen in production.", e);
		 }
		} 
	
	public static String encrypt(final String encrypted) throws Exception{
		
		try {
			
		SecretKey key = new SecretKeySpec(mySecretkey.getBytes("UTF-8"), "AES");
		IvParameterSpec iv = new IvParameterSpec(initVector.getBytes("UTF-8"));
		 
		 Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
		 cipher.init(Cipher.ENCRYPT_MODE, key, iv);
		 byte[] encryptedByteArray = cipher.doFinal(encrypted.getBytes()); 
		 return Base64.encodeBase64String(encryptedByteArray);
	 } catch (Exception e) {
		 e.printStackTrace();
		 throw new RuntimeException("This should not happen in production.", e);
		 }
	}

	public static void main(String[] args) throws Exception {
//		String encryptedString = encrypt("mrinal");
//		System.out.println(encryptedString);
//		String decryptedString = decrypt(encryptedString);
//		System.out.println(decryptedString);
		
		File fin=new File("C:/Users/mrinalvatsya/Desktop/EncryptedTest/sample.pdf");
		fin.toString();
		
		String fileInputString = fin.toString();
		System.out.println("FileInputString is : " + fileInputString);
		String encryptedString = encrypt(fileInputString);
		System.out.println("EncryptedFileInputString is : " + encryptedString);
		String decryptedString = decrypt(encryptedString);
		System.out.println("DecryptedFileInputString : " + decryptedString);
		
		OutputStream oos = new FileOutputStream("C:/Users/mrinalvatsya/Desktop/EncryptedTest/test.pdf");
		

        byte[] buf = new byte[8192];

        InputStream is = new FileInputStream(fin);

        int c = 0;

        while ((c = is.read(buf, 0, buf.length)) > 0) {
            oos.write(buf, 0, c);
            oos.flush();
        }

        oos.close();
        System.out.println("stop");
        is.close();
	}
}
